server.port=7776
spring.application.name=config-server-svn
#关闭配置仓库的健康检查  
#spring.cloud.config.server.health.enabled=false  
  
#配置属性覆盖,定义了两个属性，name和from  
#spring.cloud.config.server.overrides.name=xiaojun  
#spring.cloud.config.server.overrides.from=shanghai  
  
#spring.cloud.config.server.git.uri=https://github.com/hupuxiaojun/spring-cloud/  
#spring.cloud.config.server.git.uri=https://github.com/hupuxiaojun/{application}-config/ #通过占位符动态管理配置仓库,将获取客户端的spring.application.name作为{application}值去获取配置  
#spring.cloud.config.server.git.uri=file:///D:/config-repo/resources/ #使用本地git clone目录，需要先从git上拉到本地来，windows下面用file:///作为schema  
# 配置仓库路径下的相对搜索位置，可以配置多个  
#spring.cloud.config.server.git.search-paths=resources  
#spring.cloud.config.server.git.username=  
#spring.cloud.config.server.git.password=  
#spring.cloud.config.server.git.basedir=/data  #默认在系统临时目录下面，需要调整一下避免临时文件被系统自动清理  
eureka.client.serviceUrl.defaultZone=http://localhost:8888/eureka/
  
#使用svn作为配置仓库，必须显示声明profiles.active=subversion,web/config不然还是用的git -Dspring.profiles.active=test 
spring.profiles.active=subversion
spring.cloud.config.server.svn.uri=https://192.168.16.113/svn/web/config/
spring.cloud.config.server.svn.username=chenyuanbao
spring.cloud.config.server.svn.password=123
#可以将多个应用名用逗号隔开，
#spring.cloud.config.server.svn.search-paths=myapp,myapp1
#可以用{application}应用名作为站位符进行规则匹配
spring.cloud.config.server.svn.search-paths={application}
#使用{application}占位符  
spring.cloud.config.server.svn.default-label=trunk
spring.cloud.config.server.svn.basedir=/data
#默认在系统临时目录下面，需要调整一下避免临时文件被系统自动清理
management.security.enabled=false
security.basic.enabled=false